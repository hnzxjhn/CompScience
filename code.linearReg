import numpy as np
import matplotlib.pyplot as plt

# Dataset with higher numbers
x = np.array([100, 200, 300, 400, 500])
y = np.array([150, 300, 500, 600, 850])

# Calculate the mean of x and y
x_mean = np.mean(x)
y_mean = np.mean(y)

# Calculate the slope (m) and intercept (b) of the regression line
numerator = np.sum((x - x_mean) * (y - y_mean))
denominator = np.sum((x - x_mean) ** 2)
slope = numerator / denominator
intercept = y_mean - slope * x_mean

# Predict y values based on the regression line
y_pred = slope * x + intercept

# Visualization using matplotlib
plt.figure(figsize=(8, 6))

# Scatter plot of the data points
plt.scatter(x, y, color="blue", label="Data Points")

# Plot the regression line
plt.plot(x, y_pred, color="red", label=f"y = {slope:.2f}x + {intercept:.2f}")

# Add labels, title, and legend
plt.xlabel("X", fontsize=12)
plt.ylabel("Y", fontsize=12)
plt.title("Linear Regression with Much Higher Numbers", fontsize=14)
plt.legend()
plt.grid(True)

# Show the plot
plt.show()

# Print regression equation
print(f"Regression Equation: y = {slope:.2f}x + {intercept:.2f}")
